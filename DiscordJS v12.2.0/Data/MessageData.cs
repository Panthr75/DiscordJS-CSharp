namespace DiscordJS.Data
{
    /// <summary>
    /// Represents a message sent in a channel within Discord
    /// </summary>
    public class MessageData
    {
        /// <summary>
        /// id of the message
        /// </summary>
        public string id;

        /// <summary>
        /// id of the channel the message was sent in
        /// </summary>
        public string channel_id;

        /// <summary>
        /// id of the guild the message was sent in
        /// </summary>
        public string guild_id;

        /// <summary>
        /// the author of this message (not guaranteed to be a valid user)
        /// </summary>
        public UserData author;

        /// <summary>
        /// member properties for this message's author
        /// </summary>
        public GuildMemberData member;

        /// <summary>
        /// contents of the message
        /// </summary>
        public string content;

        /// <summary>
        /// when this message was sent
        /// </summary>
        public long timestamp;

        /// <summary>
        /// when this message was edited (or null if never)
        /// </summary>
        public long? edited_timestamp;

        /// <summary>
        /// whether this was a TTS message
        /// </summary>
        public bool tts;

        /// <summary>
        /// whether this message mentions everyone
        /// </summary>
        public bool mention_everyone;

        /// <summary>
        /// users specifically mentioned in the message
        /// </summary>
        public MessageMentionUserData[] mentions;

        /// <summary>
        /// roles specifically mentioned in this message
        /// </summary>
        public RoleData[] mention_roles;

        /// <summary>
        /// channels specifically mentioned in this message
        /// </summary>
        public ChannelData[] mention_channels;

        /// <summary>
        /// any attached files
        /// </summary>
        public MessageAttachmentData attachments;

        /// <summary>
        /// any embedded content
        /// </summary>
        public MessageEmbedData[] embeds;

        /// <summary>
        /// reactions to the message
        /// </summary>
        public ReactionData[] reactions;

        /// <summary>
        /// used for validating a message was sent
        /// </summary>
        public string nonce;

        /// <summary>
        /// whether this message is pinned
        /// </summary>
        public bool pinned;

        /// <summary>
        /// if the message is generated by a webhook, this is the webhook's id
        /// </summary>
        public string webhook_id;

        /// <summary>
        /// type of message
        /// </summary>
        public int type;

        /// <summary>
        /// sent with Rich Presence-related chat embeds
        /// </summary>
        public MessageActivityData activity;

        /// <summary>
        /// sent with Rich Presence-related chat embeds
        /// </summary>
        public MessageApplicationData application;

        /// <summary>
        /// reference data sent with crossposted messages
        /// </summary>
        public MessageReferenceData message_reference;

        /// <summary>
        /// message flags ORd together, describes extra features of the message
        /// </summary>
        public int flags;
    }

    public class MessageMentionUserData : UserData
    {
        public GuildMemberData member;
    }

    /// <summary>
    /// Represents a reaction
    /// </summary>
    public class ReactionData
    {
        /// <summary>
        /// times this emoji has been used to react
        /// </summary>
        public int count;

        /// <summary>
        /// whether the current user reacted using this emoji
        /// </summary>
        public bool me;

        /// <summary>
        /// emoji information
        /// </summary>
        public EmojiData emoji;
    }
}